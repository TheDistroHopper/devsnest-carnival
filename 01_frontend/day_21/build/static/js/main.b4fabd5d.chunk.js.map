{"version":3,"sources":["index.js"],"names":["Item","props","toggledisplay","event","val","i","target","id","split","console","log","document","getElementById","classList","toggle","value","calArray","map","className","onClick","delfun","editfun","Body","tit","cal","useState","setCalArray","type","onChange","alert","filter","item","arr","ReactDOM","render","StrictMode"],"mappings":"6LAIA,SAASA,EAAKC,GACZ,IAAIC,EAAgB,SAACC,EAAOC,GAC1B,IAAIC,EAAIF,EAAMG,OAAOC,GAAGC,MAAM,KAAK,GACnCC,QAAQC,IAAIN,GACZO,SAASC,eAAe,YAAcP,GAAGQ,UAAUC,OAAO,UAC1DH,SAASC,eAAe,YAAcP,GAAGU,MAAQX,EAAI,GACrDO,SAASC,eAAe,UAAYP,GAAGU,MAAQX,EAAI,IAErD,OAAOH,EAAMe,SAASC,KAAI,SAACF,EAAOV,GAAR,OACxB,sBAAKa,UAAU,YAAf,UACE,6BAAKH,EAAM,KACX,sBAAKG,UAAU,OAAf,UACE,4BAAI,gBAAkBH,EAAM,GAAK,iBACjC,wBAAQI,QAASlB,EAAMmB,OAAQb,GAAIF,EAAnC,oBAGA,wBACEc,QAAS,SAAChB,GAAD,OAAWD,EAAcC,EAAOY,IACzCR,GAAI,QAAUF,EAFhB,qBAOF,sBAAKE,GAAI,YAAcF,EAAGa,UAAW,kBAArC,UACE,uBAAOX,GAAI,YAAcF,IACzB,uBAAOE,GAAI,UAAYF,IACvB,wBACEc,QAAS,SAAChB,GACRF,EAAMoB,QAAQlB,GACdD,EAAcC,EAAOY,IAEvBR,GAAI,QAAUF,EALhB,uBAjB4BA,MA+BpC,SAASiB,IAAQ,IAMXC,EACAC,EAPU,EACkBC,mBAAS,CACvC,CAAC,mBAAoB,KACrB,CAAC,sBAAuB,KACxB,CAAC,YAAa,OAJF,mBACPT,EADO,KACGU,EADH,KA2Cd,OACE,sBAAKR,UAAU,YAAf,UACE,sBAAKA,UAAU,OAAf,UACE,uBAAOX,GAAG,YAAYoB,KAAK,OAAOC,SAtB1B,SAACzB,GACboB,EAAMpB,EAAMG,OAAOS,MACnBN,QAAQC,IAAI,YAqBR,uBAAOH,GAAG,UAAUoB,KAAK,SAASC,SAnB1B,SAACzB,GACbqB,EAAMrB,EAAMG,OAAOS,SAmBf,wBAAQI,QAjBI,SAAChB,GAEgC,KAA/CQ,SAASC,eAAe,aAAaG,OACQ,KAA7CJ,SAASC,eAAe,WAAWG,OAEnCW,EAAY,GAAD,mBAAKV,GAAL,CAAe,CAACO,EAAKC,MAChCb,SAASC,eAAe,aAAaG,MAAQ,GAC7CJ,SAASC,eAAe,WAAWG,MAAQ,IAE3Cc,MAAM,kBAQJ,uBAEF,cAAC7B,EAAD,CAAMgB,SAAUA,EAAUI,OA1Cd,SAACjB,GACfuB,EACEV,EAASc,QAAO,SAACC,EAAM1B,GACrB,MAAO,GAAKA,IAAMF,EAAMG,OAAOC,QAuCYc,QAnCjC,SAAClB,GACf,IAAI6B,EAAG,YAAOhB,GACVX,EAAIF,EAAMG,OAAOC,GAAGC,MAAM,KAAK,GACnCwB,EAAI3B,GAAK,CACPM,SAASC,eAAe,YAAcP,GAAGU,MACzCJ,SAASC,eAAe,UAAYP,GAAGU,OAEzCW,EAAYM,SAiChBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACb,EAAD,MAEFX,SAASC,eAAe,W","file":"static/js/main.b4fabd5d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nfunction Item(props) {\n  let toggledisplay = (event, val) => {\n    let i = event.target.id.split(\"-\")[1];\n    console.log(val);\n    document.getElementById(\"editform-\" + i).classList.toggle(\"hidden\");\n    document.getElementById(\"titleinp-\" + i).value = val[0];\n    document.getElementById(\"calinp-\" + i).value = val[1];\n  };\n  return props.calArray.map((value, i) => (\n    <div className=\"component\" key={i}>\n      <h1>{value[0]}</h1>\n      <div className=\"flex\">\n        <p>{\"You consumed \" + value[1] + \" cals today.\"}</p>\n        <button onClick={props.delfun} id={i}>\n          Delete\n        </button>\n        <button\n          onClick={(event) => toggledisplay(event, value)}\n          id={\"edit-\" + i}\n        >\n          Edit\n        </button>\n      </div>\n      <div id={\"editform-\" + i} className={\"editform hidden\"}>\n        <input id={\"titleinp-\" + i} />\n        <input id={\"calinp-\" + i} />\n        <button\n          onClick={(event) => {\n            props.editfun(event);\n            toggledisplay(event, value);\n          }}\n          id={\"done-\" + i}\n        >\n          Done\n        </button>\n      </div>\n    </div>\n  ));\n}\n\nfunction Body() {\n  const [calArray, setCalArray] = useState([\n    [\"Homemade Granola\", 489],\n    [\"Meats (Chicken Leg)\", 184],\n    [\"Firm Tofu\", 144],\n  ]);\n  let tit;\n  let cal;\n  let removeArr = (event) => {\n    setCalArray(\n      calArray.filter((item, i) => {\n        return \"\" + i !== event.target.id;\n      })\n    );\n  };\n  let updateArr = (event) => {\n    let arr = [...calArray];\n    let i = event.target.id.split(\"-\")[1];\n    arr[i] = [\n      document.getElementById(\"titleinp-\" + i).value,\n      document.getElementById(\"calinp-\" + i).value,\n    ];\n    setCalArray(arr);\n  };\n  let settits = (event) => {\n    tit = event.target.value;\n    console.log(\"inout\");\n  };\n  let setcals = (event) => {\n    cal = event.target.value;\n  };\n  let insertInArr = (event) => {\n    if (\n      document.getElementById(\"title_inp\").value !== \"\" &&\n      document.getElementById(\"cal_inp\").value !== \"\"\n    ) {\n      setCalArray([...calArray, [tit, cal]]);\n      document.getElementById(\"title_inp\").value = \"\";\n      document.getElementById(\"cal_inp\").value = \"\";\n    } else {\n      alert(\"empty Strings\");\n    }\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"form\">\n        <input id=\"title_inp\" type=\"text\" onChange={settits} />\n        <input id=\"cal_inp\" type=\"number\" onChange={setcals} />\n        <button onClick={insertInArr}>Submit</button>\n      </div>\n      <Item calArray={calArray} delfun={removeArr} editfun={updateArr} />\n    </div>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Body />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}