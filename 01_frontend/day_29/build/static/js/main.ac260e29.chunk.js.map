{"version":3,"sources":["component/CurrencySelector.js","actions/index.js","component/Card.js","App.js","reducers/fromCurrencyReducer.js","reducers/toCurrencyReducer.js","reducers/apiDataReducer.js","reducers/index.js","store.js","index.js"],"names":["CurrencySelector","dispatch","useDispatch","from","useSelector","state","fromCurrency","to","toCurrency","apiData","id","className","onChange","e","type","payload","updateFromCurrency","target","value","digital","map","currency","code","name","updateToCurrency","physical","onClick","API_KEY","process","REACT_APP_FINANCE_API_KEY","fetch","then","response","json","data","getApiData","Card","Object","keys","length","App","fromCurrencyReducer","action","toCurrencyReducer","apiDataReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"y4yBA2CeA,EArCU,WAErB,IAAMC,EAAWC,cAEXC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMC,gBACpCC,EAAKH,aAAY,SAACC,GAAD,OAAWA,EAAMG,cACxBJ,aAAY,SAACC,GAAD,OAAWA,EAAMI,WAE7C,OAAQ,gCACJ,yBAAQC,GAAG,gBAAgBC,UAAU,mBAAmBC,SAAU,SAAAC,GAC9DZ,EChBe,SAACE,GACxB,MAAO,CACHW,KAAM,cACNC,QAASZ,GDaIa,CAAmBH,EAAEI,OAAOC,SADzC,UAII,wBAAQA,MAAM,GAAd,yBACCC,EAAQC,KAAI,SAACC,GAAD,OACT,wBAA4BH,MAAOG,EAASC,KAA5C,SAAmDD,EAASE,MAA/CF,EAASC,YAI9B,yBAAQZ,GAAG,cAAcC,UAAU,mBAAmBC,SAAU,SAAAC,GAC5DZ,ECnBa,SAACM,GACtB,MAAO,CACHO,KAAM,YACNC,QAASR,GDgBIiB,CAAiBX,EAAEI,OAAOC,SADvC,UAII,wBAAQA,MAAM,GAAd,uBACCO,EAASL,KAAI,SAACC,GAAD,OACV,wBAA4BH,MAAOG,EAASC,KAA5C,SAAmDD,EAASE,MAA/CF,EAASC,YAK9B,wBAAQI,QAAS,WACbzB,ECvBO,SAACE,EAAMI,GACtB,IAAMoB,EAAUC,oIAAYC,0BAC5B,OAAO,SAAC5B,GACJ6B,MAAM,mFAAD,OACkF3B,EADlF,wBACsGI,EADtG,mBACmHoB,IACtHI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACvBF,MAAK,SAAAG,GACFjC,EAAS,CACLa,KAAM,eACNC,QAASmB,QDcRC,CAAWhC,EAAMI,KAD9B,wBEnBO6B,G,MAdF,WACT,IAAMF,EAAO9B,aAAY,SAACC,GAAD,OAAWA,EAAMI,WAC1C,OACiC,IAA7B4B,OAAOC,KAAKJ,GAAMK,OAAe,mDACjCL,EAAK,mCACD,sBAAKvB,UAAU,OAAf,UACI,wCAAWuB,EAAK,mCAAmC,4BACnD,sCAASA,EAAK,mCAAmC,0BACjD,iDAAoBA,EAAK,mCAAmC,uBAC5D,gDAAmBA,EAAK,mCAAmC,qBAA3D,eACMA,EAAK,iBAAoB,kDAA4B,qDCC5DM,MATf,WACI,OACI,sBAAK7B,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,Q,OCFG8B,EAPa,WAA4B,IAA3BpC,EAA0B,uDAAlB,MAAOqC,EAAW,uCACnD,MAAoB,gBAAhBA,EAAO5B,KACA4B,EAAO3B,QAEXV,GCGIsC,EAPW,WAAyB,IAAxBtC,EAAuB,uDAAf,GAAIqC,EAAW,uCAC9C,MAAoB,cAAhBA,EAAO5B,KACA4B,EAAO3B,QAEXV,GCGIuC,EAPQ,WAAyB,IAAxBvC,EAAuB,uDAAf,GAAIqC,EAAW,uCAC3C,MAAoB,iBAAhBA,EAAO5B,KACA4B,EAAO3B,QAEXV,GCOIwC,EANKC,YAAgB,CAChCxC,aAAcmC,EACdjC,WAAYmC,EACZlC,QAASmC,I,QCFEG,EAFDC,YAAYH,EAAYI,YAAgBC,MCGtDC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGRO,SAASC,eAAe,W","file":"static/js/main.ac260e29.chunk.js","sourcesContent":["import \"../style/currencySelector.css\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {updateFromCurrency, updateToCurrency, getApiData} from \"../actions\";\nimport digital from \"../digital_currency.json\"\nimport physical from \"../physical_currency.json\"\n\nconst CurrencySelector = () => {\n\n    const dispatch = useDispatch();\n\n    const from = useSelector((state) => state.fromCurrency)\n    const to = useSelector((state) => state.toCurrency)\n    const apiData = useSelector((state) => state.apiData)\n\n    return (<div>\n        <select id=\"from-currency\" className=\"dropdown-content\" onChange={e => {\n            dispatch(updateFromCurrency(e.target.value));\n        }}\n        >\n            <option value=\"\">Select From</option>\n            {digital.map((currency) => (\n                <option key={currency.code} value={currency.code}>{currency.name}</option>\n            ))}\n        </select>\n\n        <select id=\"to-currency\" className=\"dropdown-content\" onChange={e => {\n            dispatch(updateToCurrency(e.target.value));\n        }}\n        >\n            <option value=\"\">Select To</option>\n            {physical.map((currency) => (\n                <option key={currency.code} value={currency.code}>{currency.name}</option>\n            ))}\n\n        </select>\n\n        <button onClick={() => {\n            dispatch(getApiData(from, to))\n        }}>Submit\n        </button>\n    </div>)\n}\n\nexport default CurrencySelector","const updateFromCurrency = (from) => {\n    return {\n        type: \"UPDATE_FROM\",\n        payload: from,\n    };\n};\n\nconst updateToCurrency = (to) => {\n    return {\n        type: \"UPDATE_TO\",\n        payload: to,\n    };\n};\n\nconst getApiData = (from, to) => {\n    const API_KEY = process.env.REACT_APP_FINANCE_API_KEY;\n    return (dispatch) => {\n        fetch(\n            `https://www.alphavantage.co/query?function=CURRENCY_EXCHANGE_RATE&from_currency=${from}&to_currency=${to}&apikey=${API_KEY}`\n        ).then(response => response.json())\n            .then(data => {\n                dispatch({\n                    type: \"GET_API_DATA\",\n                    payload: data,\n                })\n            })\n    }\n}\nexport {updateFromCurrency, updateToCurrency, getApiData};","import '../style/card.css';\nimport {useSelector} from \"react-redux\";\n\nconst Card = () => {\n    const data = useSelector((state) => state.apiData);\n    return (\n        Object.keys(data).length === 0 ? <h2>Select Currencies</h2> :\n        data[\"Realtime Currency Exchange Rate\"] ?\n            <div className=\"card\">\n                <h3>From: {data[\"Realtime Currency Exchange Rate\"][\"2. From_Currency Name\"]}</h3>\n                <h3>To: {data[\"Realtime Currency Exchange Rate\"][\"4. To_Currency Name\"]}</h3>\n                <h3>Exchange Rate: {data[\"Realtime Currency Exchange Rate\"][\"5. Exchange Rate\"]}</h3>\n                <h3>Last Updated: {data[\"Realtime Currency Exchange Rate\"][\"6. Last Refreshed\"]} (UTC)</h3>\n            </div> : (data[\"Error Message\"]) ? <h2>Invalid API call</h2> : <h2>API Limit Reached</h2>\n    )\n}\n\nexport default Card","import './App.css';\nimport CurrencySelector from \"./component/CurrencySelector\";\nimport Card from \"./component/Card\";\nimport {useState} from \"react\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <CurrencySelector />\n            <Card />\n        </div>\n    );\n}\n\nexport default App;","const fromCurrencyReducer = (state = \"BTC\", action) => {\n    if (action.type === \"UPDATE_FROM\") {\n        return action.payload;\n    }\n    return state;\n}\n\nexport default fromCurrencyReducer;","const toCurrencyReducer = (state = \"\", action) => {\n    if (action.type === \"UPDATE_TO\") {\n        return action.payload;\n    }\n    return state;\n}\n\nexport default toCurrencyReducer;","const apiDataReducer = (state = {}, action) => {\n    if (action.type === \"GET_API_DATA\") {\n        return action.payload;\n    }\n    return state;\n}\n\nexport default apiDataReducer;","import {combineReducers} from 'redux';\nimport fromCurrencyReducer from \"./fromCurrencyReducer\";\nimport toCurrencyReducer from \"./toCurrencyReducer\";\nimport apiDataReducer from \"./apiDataReducer\";\n\nconst rootReducer = combineReducers({\n    fromCurrency: fromCurrencyReducer,\n    toCurrency: toCurrencyReducer,\n    apiData: apiDataReducer,\n})\n\nexport default rootReducer;","import {createStore, applyMiddleware} from \"redux\";\nimport rootReducer from \"./reducers\";\nimport thunk from\"redux-thunk\"\n\nconst store = createStore(rootReducer,applyMiddleware(thunk));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}