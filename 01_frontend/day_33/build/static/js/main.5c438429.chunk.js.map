{"version":3,"sources":["ThemeContext.tsx","ThemeToggle.tsx","TodoList.tsx","Todos.tsx","App.tsx","index.tsx"],"names":["initialState","theme","setTheme","ThemeContext","createContext","ThemeToggle","useContext","className","onClick","TodoList","title","done","Todos","useState","todos","setTodos","input","setInput","type","value","onChange","e","target","map","todo","index","App","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAKMA,G,MAAiC,CACrCC,OAAO,EACPC,SAAU,SAACD,OAEAE,EAAeC,wBAAgCJ,G,OCK7CK,EAZK,WAClB,MAA4BC,qBAA6BH,GAAjDF,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACf,OACE,wBACEK,UAAWN,EAAQ,oBAAsB,eACzCO,QAAS,kBAAMN,GAAUD,IAF3B,SAIGA,EAAQ,OAAS,W,OCITQ,EARE,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAiC,EAA1BC,KACzB,OACE,8BACE,6BAAKD,OCyBIE,EA1BD,WACZ,MAA0BC,mBAAqB,IAA/C,mBAAOC,EAAP,KAAcC,EAAd,KACQd,EAAUK,qBAA6BH,GAAvCF,MACR,EAA0BY,mBAAiB,IAA3C,mBAAOG,EAAP,KAAcC,EAAd,KACA,OACE,sBAAKV,UAAWN,EAAQ,aAAe,QAAvC,UACE,uBACEiB,KAAK,OACLC,MAAOH,EACPI,SAAU,SAACC,GAAD,OAAOJ,EAASI,EAAEC,OAAOH,UAErC,wBACEX,QAAS,WACPO,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAAEJ,MAAOM,EAAOL,MAAM,MAC1CM,EAAS,KAHb,sBAQCH,EAAMS,KAAI,SAACC,EAAMC,GAAP,OACT,cAAC,EAAD,CAAsBf,MAAOc,EAAKd,MAAOC,KAAMa,EAAKb,MAArCc,UCTRC,EAZH,WACV,MAA0Bb,oBAAkB,GAA5C,mBAAOZ,EAAP,KAAcC,EAAd,KACA,OACE,cAACC,EAAawB,SAAd,CAAuBR,MAAO,CAAElB,QAAOC,YAAvC,SACE,sBAAKK,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UCPRqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5c438429.chunk.js","sourcesContent":["import { createContext } from \"react\";\nexport interface ThemeContextType {\n  theme: boolean;\n  setTheme: (theme: boolean) => void;\n}\nconst initialState: ThemeContextType = {\n  theme: false,\n  setTheme: (theme: boolean) => {},\n};\nexport const ThemeContext = createContext<ThemeContextType>(initialState);\n","import { useContext } from \"react\";\nimport { ThemeContext, ThemeContextType } from \"./ThemeContext\";\nconst ThemeToggle = () => {\n  const { theme, setTheme } = useContext<ThemeContextType>(ThemeContext);\n  return (\n    <button\n      className={theme ? \"theme-toggle dark\" : \"theme-toggle\"}\n      onClick={() => setTheme(!theme)}\n    >\n      {theme ? \"Dark\" : \"Light\"}\n    </button>\n  );\n};\n\nexport default ThemeToggle;\n","interface TodoListProps {\n  title: string;\n  done: boolean;\n}\n\nconst TodoList = ({ title, done }: TodoListProps) => {\n  return (\n    <div>\n      <h2>{title}</h2>\n    </div>\n  );\n};\n\nexport default TodoList;\n","import { useState, useContext } from \"react\";\nimport { ThemeContext, ThemeContextType } from \"./ThemeContext\";\nimport TodoList from \"./TodoList\";\ninterface TodoType {\n  title: string;\n  done: boolean;\n}\nconst Todos = () => {\n  const [todos, setTodos] = useState<TodoType[]>([]);\n  const { theme } = useContext<ThemeContextType>(ThemeContext);\n  const [input, setInput] = useState<string>(\"\");\n  return (\n    <div className={theme ? \"todos dark\" : \"todos\"}>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n      />\n      <button\n        onClick={() => {\n          setTodos([...todos, { title: input, done: false }]);\n          setInput(\"\");\n        }}\n      >\n        Add Todo\n      </button>\n      {todos.map((todo, index) => (\n        <TodoList key={index} title={todo.title} done={todo.done} />\n      ))}\n    </div>\n  );\n};\n\nexport default Todos;\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport { ThemeContext } from \"./ThemeContext\";\nimport ThemeToggle from \"./ThemeToggle\";\nimport Todos from \"./Todos\";\n\nconst App = () => {\n  const [theme, setTheme] = useState<boolean>(false);\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      <div className=\"App\">\n        <Todos />\n        <ThemeToggle />\n      </div>\n    </ThemeContext.Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}