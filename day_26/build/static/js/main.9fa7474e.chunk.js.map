{"version":3,"sources":["App.js","actions/index.js","reportWebVitals.js","reducers/counter.js","reducers/logged.js","reducers/index.js","index.js"],"names":["App","counter","useSelector","state","dispatch","useDispatch","className","onClick","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","counterReducer","action","loggedReducer","sagleReducers","combineReducers","logged","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"yMAkBeA,MAZf,WACE,IAAMC,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,WACrCG,EAAWC,cACjB,OACE,sBAAKC,UAAU,MAAf,UACE,+CAAkBL,KAClB,wBAAQM,QAAU,kBAAIH,ECXjB,CACHI,KAAM,eDUR,eACE,wBAAQD,QAAU,kBAAIH,ECPnB,CACHI,KAAM,eDMN,mBEDOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCKCQ,EAZQ,WAAwB,IAAvBf,EAAsB,uDAAd,EAAGgB,EAAW,uCAC1C,OAAOA,EAAOX,MACV,IAAK,YACD,OAAOL,EAAM,EACjB,IAAK,YACD,OAAOA,EAAM,EACjB,QACI,OAAOA,ICEJiB,EATO,WAA0B,IAAzBjB,EAAwB,wDAATgB,EAAS,uCAC3C,OAAQA,EAAOX,MACX,IAAK,UACD,OAAQL,EACZ,QACI,OAAOA,ICKJkB,EALOC,YAAgB,CAClCrB,QAAUiB,EACVK,OAASH,ICGPI,EAAQC,YAAYJ,EAAcK,OAAOC,8BAAgCD,OAAOC,gCAEtFC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAQA,EAAlB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,SAM1BtB,M","file":"static/js/main.9fa7474e.chunk.js","sourcesContent":["import React from \"react\";\nimport {useSelector, useDispatch} from 'react-redux'\nimport {increment} from './actions';\nimport {decrement} from './actions';\nimport \"./App.css\";\n\nfunction App() {\n  const counter = useSelector(state => state.counter)\n  const dispatch = useDispatch();\n  return (\n    <div className=\"App\">\n      <h2>Tasks Done : {counter}</h2>\n      <button onClick= {()=>dispatch(increment())}>+</button>\n        <button onClick= {()=>dispatch(decrement())}>-</button>\n    </div>\n  );\n}\n\nexport default App;\n","export const increment = () =>{\r\n    return {\r\n        type: 'INCREMENT'\r\n    };\r\n};\r\nexport const decrement = () =>{\r\n    return {\r\n        type: 'DECREMENT'\r\n    };\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const counterReducer = (state = 0, action) => {\r\n    switch(action.type){\r\n        case 'INCREMENT':\r\n            return state+1;\r\n        case 'DECREMENT':\r\n            return state-1;\r\n        default :\r\n            return state;\r\n        }\r\n\r\n  };\r\n\r\nexport default counterReducer","const loggedReducer = (state = false, action)=>{\r\n    switch (action.type){\r\n        case 'SIGN_IN':\r\n            return !state;\r\n        default :\r\n            return state;\r\n        }\r\n  };\r\n\r\nexport default loggedReducer;","import counterReducer from \"./counter\";\r\nimport loggedReducer from \"./logged\";\r\nimport { combineReducers } from \"redux\";\r\n\r\n\r\nconst sagleReducers = combineReducers({\r\n    counter : counterReducer,\r\n    logged : loggedReducer\r\n})\r\n\r\nexport default sagleReducers","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport sagleReducers from './reducers/'\nimport { Provider } from 'react-redux';\n\n\nconst store = createStore(sagleReducers,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n  <Provider store ={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}